definitions:
  models.AttachmentDTO:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      mime_type:
        type: string
      name:
        type: string
      original_name:
        type: string
      path:
        type: string
      ref:
        type: string
      size:
        type: integer
      type:
        type: string
      url:
        type: string
    type: object
  models.Auth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.AuthJwtPayload:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      id_token:
        type: string
      not-before-policy:
        type: integer
      refresh_expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      session_state:
        type: string
      token_type:
        type: string
    type: object
  models.ChannelDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.CreateTroubleTicketDTO:
    properties:
      channel_id:
        type: integer
      description:
        type: string
      name:
        type: string
      requested_resolution_date:
        type: string
      type_id:
        type: integer
    type: object
  models.ExternalIdentifierDTO:
    properties:
      id:
        type: integer
      owner:
        type: string
      ref:
        type: string
      type:
        $ref: '#/definitions/models.TypeDTO'
    type: object
  models.FiltersDTO:
    properties:
      channels:
        items:
          $ref: '#/definitions/models.ChannelDTO'
        type: array
      priorities:
        items:
          $ref: '#/definitions/models.PriorityDTO'
        type: array
      roles:
        items:
          $ref: '#/definitions/models.RoleDTO'
        type: array
      severities:
        items:
          $ref: '#/definitions/models.SeverityDTO'
        type: array
      statuses:
        items:
          $ref: '#/definitions/models.StatusDTO'
        type: array
      types:
        items:
          $ref: '#/definitions/models.TypeDTO'
        type: array
    type: object
  models.NoteDTO:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: integer
      text:
        type: string
    type: object
  models.PartyDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        $ref: '#/definitions/models.RoleDTO'
    type: object
  models.PriorityDTO:
    properties:
      id:
        type: integer
      sequence:
        type: integer
      type:
        type: string
    type: object
  models.RelatedEntityDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      ref:
        type: string
      type:
        type: string
    type: object
  models.RelatedPartyDTO:
    properties:
      id:
        type: integer
      party:
        $ref: '#/definitions/models.PartyDTO'
    type: object
  models.RoleDTO:
    properties:
      filter:
        type: integer
      id:
        type: integer
      name:
        type: string
      sequence:
        type: integer
    type: object
  models.SeverityDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.SignUpDTO:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      realmRoles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.StatusChangeDTO:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: integer
      reason:
        type: string
      status:
        $ref: '#/definitions/models.StatusDTO'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.StatusDTO:
    properties:
      filter:
        type: integer
      id:
        type: integer
      name:
        type: string
      sequence:
        type: integer
    type: object
  models.TroubleTicketDTO:
    properties:
      attachments:
        items:
          $ref: '#/definitions/models.AttachmentDTO'
        type: array
      channel:
        $ref: '#/definitions/models.ChannelDTO'
      created_at:
        description: autoPopulate with the current timestamp on record creation
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      expected_resolution_date:
        type: string
      external_identifiers:
        items:
          $ref: '#/definitions/models.ExternalIdentifierDTO'
        type: array
      id:
        type: integer
      name:
        type: string
      notes:
        items:
          $ref: '#/definitions/models.NoteDTO'
        type: array
      priority:
        $ref: '#/definitions/models.PriorityDTO'
      ref:
        type: string
      related_entities:
        items:
          $ref: '#/definitions/models.RelatedEntityDTO'
        type: array
      related_parties:
        items:
          $ref: '#/definitions/models.RelatedPartyDTO'
        type: array
      resolution_date:
        type: string
      severity:
        $ref: '#/definitions/models.SeverityDTO'
      status:
        $ref: '#/definitions/models.StatusDTO'
      status_changes:
        items:
          $ref: '#/definitions/models.StatusChangeDTO'
        type: array
      type:
        $ref: '#/definitions/models.TypeDTO'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.TypeDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /attachments/{ticketId}:
    get:
      parameters:
      - description: Trouble Ticket ID
        in: path
        name: ticketId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.AttachmentDTO'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: find attachments by a trouble ticket ID
      tags:
      - Attachments
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Trouble Ticket ID
        in: path
        name: ticketId
        required: true
        type: integer
      - description: Attachment file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttachmentDTO'
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: upload an attachment for a trouble ticket
      tags:
      - Attachments
  /attachments/ref/{ref}:
    delete:
      parameters:
      - description: Attachment Ref
        in: path
        name: ref
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: remove an attachment by its ref
      tags:
      - Attachments
    get:
      parameters:
      - description: Attachment Ref
        in: path
        name: ref
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttachmentDTO'
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: find an attachment by its ref
      tags:
      - Attachments
  /auth/signIn:
    post:
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthJwtPayload'
        "500":
          description: Internal Server Error
          schema: {}
      summary: Sign In
      tags:
      - Auth
  /auth/signUp:
    post:
      description: Done by System Management Personnel's
      parameters:
      - description: Signup credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpDTO'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: Sign Up
      tags:
      - Auth
  /troubleTickets:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TroubleTicketDTO'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: fetch all trouble tickets
      tags:
      - Trouble Tickets
    post:
      parameters:
      - description: Create New Ticket info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateTroubleTicketDTO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TroubleTicketDTO'
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: Create a trouble ticket
      tags:
      - Trouble Tickets
  /troubleTickets/filters:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FiltersDTO'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - Bearer: []
      summary: fetch all related trouble tickets filters / dropdown
      tags:
      - Trouble Tickets
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
